# Defines the Xcode Project, which can be generated by running `make generate_project`
# Specification: https://github.com/yonaskolb/XcodeGen/blob/master/Docs/ProjectSpec.md

name: CTR

# - Packages:

packages:
  Inject: 
    github: krzysztofzablocki/Inject # only in debug mode. Compiles as a no-op in release https://github.com/krzysztofzablocki/Inject/blob/main/Sources/Inject/Integrations/Hosts.swift
    branch: main
  IOSSecuritySuite:
    github: securing/IOSSecuritySuite
    majorVersion: 1.9.5
  Lottie:
    github: airbnb/lottie-ios
    majorVersion: 4.0.1
  RDOModules:
    github: minvws/nl-rdo-app-ios-modules
    branch: main
  Nimble:
    github: Quick/Nimble
    majorVersion: 10.0.0
  OHHTTPStubs:
    github: AliSoftware/OHHTTPStubs
    majorVersion: 9.1.0
  BrightFutures:
    github: Thomvis/BrightFutures
    branch: master
  Reachability: # Once we support >= iOS12.0 we can remove this & use iOS NWPathMonitor instead.
    github: ashleymills/Reachability.swift
    majorVersion: 5.1.0
  RSwiftLibrary:
    github: mac-cain13/R.swift.Library
    majorVersion: 5.4.0
  SnapshotTesting:
    github: pointfreeco/swift-snapshot-testing
    exactVersion: 1.9.0
  Shared:
    path: ./Packages/Shared
  Transport:
    path: ./Packages/Transport

# - Attributes:

attributes:
  LastUpgradeCheck: "1400"

# - Configurations:

configs:
  Development: debug
  FirebaseAcceptance: release
  FirebaseTest: release
  FirebaseProduction: release # should be identical to AppStore build.
  AppStore: release

fileGroups:
  - project.yml
  - Localizations
  - .github
  - Scripts

# - Project Level settings:

options:
  developmentLanguage: nl

settings:
  base:
    IPHONEOS_DEPLOYMENT_TARGET: 11.0
    SWIFT_VERSION: 5.0
    VERSIONING_SYSTEM: apple-generic
    CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: YES
    FRAMEWORK_SEARCH_PATHS:
      - "$(inherited)"
      - "$(PROJECT_DIR)"
    LD_RUNPATH_SEARCH_PATHS:
      - "$(inherited)"
      - "@executable_path/Frameworks"

# - Target Templates (i.e. shared default settings for targets):

targetTemplates:

  Standard_BaseSettings:
    info:
      properties:
        # Dynamic properties (APP_FLAVOR etc) here are set at build time, so can still vary based on a Configuration.
        NETWORK_CONFIGURATION: $(NETWORK_CONFIGURATION)
        APP_FLAVOR: ${APP_FLAVOR}
        LOG_LEVEL: ${LOG_LEVEL}
    settings:
      base:
        VALIDATE_PRODUCT: YES
        DEBUG_INFORMATION_FORMAT: dwarf-with-dsym # Firebase warns that this must be set for all targets.
        ENABLE_BITCODE: false # because it's deprecated
      configs:
        Development:
          NETWORK_CONFIGURATION: DEV
          VALIDATE_PRODUCT: NO
          LOG_LEVEL: debug
          OTHER_LDFLAGS: -Xlinker -interposable -weak_framework SwiftUI # all for Inject
        FirebaseAcceptance:
          NETWORK_CONFIGURATION: ACC
          LOG_LEVEL: error
          SWIFT_OPTIMIZE_OBJECT_LIFETIME: true
        FirebaseTest:
          NETWORK_CONFIGURATION: TEST
          LOG_LEVEL: debug
          SWIFT_OPTIMIZE_OBJECT_LIFETIME: true
        FirebaseProduction:
          NETWORK_CONFIGURATION: Production
          LOG_LEVEL: error
          SWIFT_OPTIMIZE_OBJECT_LIFETIME: true
        AppStore:
          NETWORK_CONFIGURATION: Production
          LOG_LEVEL: error
          SWIFT_OPTIMIZE_OBJECT_LIFETIME: true

  Standard_Signing:
    settings:
      base:
        CODE_SIGN_STYLE: Manual
        CODE_SIGN_IDENTITY: iPhone Distribution
        DEVELOPMENT_TEAM: C2H38GV99H
      configs:
        Development:
          CODE_SIGN_IDENTITY: iPhone Developer
        FirebaseAcceptance:
        FirebaseTest:
        FirebaseProduction:
        AppStore:
        
  Standard_iOS:
    platform: iOS
    type: application
    dependencies:
      # SPM:
      - package: IOSSecuritySuite
      - package: Lottie
      - package: RDOModules
        product: LuhnCheck
      - package: RDOModules
        product: QRGenerator
      - package: RDOModules
        product: OpenIDConnect
      - package: RDOModules
        product: HTTPSecurity
      - package: Inject
      - package: Reachability
        product: Reachability
      - package: RSwiftLibrary
        product: Rswift
      - package: BrightFutures
        product: BrightFutures
      # Frameworks:
      - framework: clcore.xcframework
        embed: false
      - sdk: libSwiftCoreGraphics.tbd
    settings:
      base:
        CURRENT_PROJECT_VERSION: 1 # needs to be present for project to build locally, but is overwritten by fastlane. No need to change.
        ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME: AccentColor
        SWIFT_OBJC_BRIDGING_HEADER: Sources/CTR/Infrastructure/Core/CTR-Bridging-Header.h
        TARGETED_DEVICE_FAMILY: 1
        PRODUCT_NAME: $(TARGET_NAME)
        PRODUCT_MODULE_NAME: CTR
    info:
      properties:
        CFBundleDevelopmentRegion: nl_NL
        CFBundleExecutable: $(EXECUTABLE_NAME)
        CFBundleName: ${DISPLAY_NAME}
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: $(MARKETING_VERSION)
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        ITSAppUsesNonExemptEncryption: false
        LSApplicationQueriesSchemes:
          - 'tel'
          - 'activator'
          - 'cydia'
          - 'filza'
          - 'sileo'
          - 'undecimus'
          - 'zbra'
          - 'https'
          - 'googlechromes'
          - 'opera-https'
          - 'firefox'
          - 'microsoft-edge-https'
          - 'itms-apps'
        LSRequiresIPhoneOS: true
        NSCameraUsageDescription: "De app will toegang tot de camera om de QR-code te scannen."
        UIAppFonts:
          - 'Montserrat-Bold.ttf'
          - 'Montserrat-SemiBold.ttf'
        UIApplicationSceneManifest:
          UIApplicationSupportsMultipleScenes: false
          UISceneConfigurations:
            UIWindowSceneSessionRoleApplication:
              - UISceneConfigurationName: Default Configuration
                UISceneDelegateClassName: $(PRODUCT_MODULE_NAME).SceneDelegate
        UIApplicationSupportsIndirectInputEvents: true
        UIRequiredDeviceCapabilities:
          - armv7
        UIStatusBarStyle: UIStatusBarStyleDarkContent
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
          - UIInterfaceOrientationPortraitUpsideDown
        UISupportedInterfaceOrientations~ipad:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationPortraitUpsideDown
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
        UIUserInterfaceStyle: Light
        UIViewControllerBasedStatusBarAppearance: true
    preBuildScripts:
      - name: Run SwiftLint
        basedOnDependencyAnalysis: false
        script: |

          # Determine path of Swiftlint. For M1 homebrew installs, it's at a location that isn't in Xcode's $PATH
          if [ -f "/opt/homebrew/bin/swiftlint" ]; then
            SWIFTLINT_PATH=/opt/homebrew/bin/swiftlint
          elif which swiftlint >/dev/null; then
            SWIFTLINT_PATH=swiftlint
          fi

          # Call Swiftlint:
          if [ -z ${SWIFTLINT_PATH+x} ]; then
            echo "warning: SwiftLint not found, run 'make dev' in the project root folder"
          else
            $SWIFTLINT_PATH --quiet --config=./.swiftlint.yml
          fi

  Standard_UnitTesting:
    platform: iOS
    type: bundle.unit-test
    dependencies:
      - package: Nimble
      - package: OHHTTPStubs
        product: OHHTTPStubsSwift
      - package: SnapshotTesting
      - target: Holder
      - framework: Vendor/ViewControllerPresentationSpy.framework
        embed: true
    settings:
      TEST_HOST: "$(BUILT_PRODUCTS_DIR)/CTR.app/CTR"

  Standard_UITesting:
    platform: iOS
    type: bundle.ui-testing
    dependencies:
      - target: Holder
    settings:
      base:
        GENERATE_INFOPLIST_FILE: YES

# - Targets

targets:
  Holder:
    # scheme:
    #   testTargets:
        
    dependencies:
      - package: Shared
      - package: Transport
    templates:
      - Standard_iOS
      - Standard_Signing
      - Standard_BaseSettings
    sources:
      - path: Sources/CTR
        excludes:
          - "CTR/Interface/Verifier/Launch"
          - "CTR/Infrastructure/Resources/Localization/Verifier/*.lproj"
          - "CTR/Configuration/verifier-Info.plist"
      - path: Sources/CTR/Infrastructure/Resources/R.generated.swift
        optional: true
        
    settings:
      base:
        APP_FLAVOR: holder
        # keep the comment on the next line, as it shows up in the CI logs & helps distinguish
        MARKETING_VERSION: 4.11.0 # holder
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIconHolder
        INFOPLIST_FILE: Sources/CTR/Configuration/holder-Info.plist
        TARGETED_DEVICE_FAMILY: 1,2 # holder supports iPad

      configs:
        Development:
          DISPLAY_NAME: "ðŸ¤– Dev Holder"
          PRODUCT_NAME: CTR
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.dev
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Dev
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Dev.entitlements
        FirebaseTest:
          DISPLAY_NAME: "ðŸ§ª Test Holder"
          PRODUCT_NAME: CTR Test
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.test
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Test
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Test.entitlements
        FirebaseAcceptance:
          DISPLAY_NAME: "ðŸ’¡ Acc Holder"
          PRODUCT_NAME: CTR ACC
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.acc
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Acc
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Acc.entitlements
        FirebaseProduction:
          DISPLAY_NAME: "Prod Holder"
          PRODUCT_NAME: CTR PROD
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Prod
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Prod.entitlements
        AppStore:
          DISPLAY_NAME: CoronaCheck
          PRODUCT_NAME: CTR
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder AppStore
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Prod.entitlements
    info:
      path: Sources/CTR/Configuration/holder-Info.plist
      properties:
        CFBundleURLTypes:
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr
              CFBundleURLSchemes:
                - coronacheck
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.dev
              CFBundleURLSchemes:
                - coronacheck-dev
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.test
              CFBundleURLSchemes:
                - coronacheck-test
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.acc
              CFBundleURLSchemes:
                - coronacheck-acc
        UILaunchStoryboardName: LaunchScreenHolder

  Verifier:
    dependencies:
      - package: Shared
      - package: Transport
    templates:
      - Standard_iOS
      - Standard_Signing
      - Standard_BaseSettings
    sources:
      - path: Sources/CTR
        excludes:
          - "CTR/Interface/Holder/Launch"
          - "CTR/Infrastructure/Resources/Localization/Holder/*.lproj"
          - "CTR/Configuration/holder-Info.plist"
      - path: Sources/CTR/Infrastructure/Resources/R.generated.swift
        optional: true
    settings:
      base:
        APP_FLAVOR: verifier
        # keep the comment on the next line, as it shows up in the CI logs & helps distinguish
        MARKETING_VERSION: 3.0.3 # verifier
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIconVerifier
        INFOPLIST_FILE: Sources/CTR/Configuration/verifier-Info.plist
      configs:
        Development:
          DISPLAY_NAME: "ðŸ¤– Dev Scanner"
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier.dev
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Dev
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Verifier-Dev.entitlements
        FirebaseTest:
          DISPLAY_NAME: "ðŸ§ª Test Scanner"
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier.test
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Test
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Verifier-Test.entitlements
        FirebaseAcceptance:
          DISPLAY_NAME: "ðŸ’¡ Acc Scanner"
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Acc
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier.acc
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Verifier-Acc.entitlements
        FirebaseProduction:
          DISPLAY_NAME: "Prod Scanner"
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Prod
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Verifier-Prod.entitlements
        AppStore:
          DISPLAY_NAME: Scanner
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier AppStore
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Verifier-Prod.entitlements
    info:
      path: Sources/CTR/Configuration/verifier-Info.plist
      properties:
        CFBundleURLTypes:
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.verifier
              CFBundleURLSchemes:
                - coronacheck-verifier
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.verifier.dev
              CFBundleURLSchemes:
                - coronacheck-verifier-dev
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.verifier.test
              CFBundleURLSchemes:
                - coronacheck-verifier-test
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.verifier.acc
              CFBundleURLSchemes:
                - coronacheck-verifier-acc
        UILaunchStoryboardName: LaunchScreenVerifier

  CTRTests:
    templates:
      - Standard_UnitTesting
    sources:
      - path: CTRTests
        excludes:
          - "**/__Snapshots__"

  HolderUITests:
    templates:
      - Standard_UITesting
    sources:
      - path: HolderUITests

  HolderUISmoketests:
    templates:
      - Standard_UITesting
    sources:
      - path: HolderUITests
        excludes:
        - Tests/*

# - Scheme Templates

schemeTemplates:

  # Template for Development/Acc/Production/AppStore varieties
  ConfigScheme:
    build:
      config: ${configEnvironment} #not sure if needed.
      targets:
        ${appTargetName}: all
    test:
      config: ${configEnvironment}
    run:
      config: ${configEnvironment}
    profile:
      config: ${configEnvironment}
    analyze:
      config: ${configEnvironment}
    archive:
      config: ${configEnvironment}

  # Variant of the standard `ConfigScheme` for Development
  DevelopmentConfigScheme:
    templates:
      - ConfigScheme
    run:
      commandLineArguments:
        # Enable CoreData debug flags:
        # See: https://www.donnywals.com/using-launch-arguments-for-easier-core-data-debugging/
       # "-com.apple.CoreData.SQLDebug 2": YES # choose a level from 1-4
        "-com.apple.CoreData.ConcurrencyDebug 1": YES # crash with stacktrace on concurrency mistakes
        "-com.apple.CoreData.MigrationDebug 1": YES

  # Template for adding unit tests to a scheme:
  UnitTestScheme:
    test:
      commandLineArguments:
        "--unittesting": true
      language: nl
      region: NL
      gatherCoverageData: true
      coverageTargets:
        - ${appTargetName}

  # Template for adding UI tests to a scheme:
  UITestScheme:
    test:
      language: nl
      region: NL
      environmentVariables:
        ACCEPTANCE_BASIC_AUTH_PASSWORD: "$(ACCEPTANCE_BASIC_AUTH_PASSWORD)"
      targets:
        - name: ${uiTestTargetName}
          parallelizable: true
          randomExecutionOrder: true

# - Schemes

schemes:
  Holder Dev:
    templates:
      - DevelopmentConfigScheme
      - UnitTestScheme # This scheme has unit tests
    templateAttributes:
      appTargetName: Holder
      configEnvironment: Development
    run:
      language: nl
      commandLineArguments:
        "-shouldInjectView": true
    test:
      targets:
        - package: Shared/SharedTests
          randomExecutionOrder: true
          parallelizable: false
        - package: Transport/TransportTests
          randomExecutionOrder: true
          parallelizable: false
        - name: CTRTests
          parallelizable: false
          randomExecutionOrder: true
    
  Holder UI Tests:
    templates:
      - DevelopmentConfigScheme
      - UITestScheme # This scheme has UI tests
    templateAttributes:
      appTargetName: Holder
      uiTestTargetName: HolderUITests
      configEnvironment: Development
    run:
      language: nl

  Holder UI Smoketests:
    templates:
      - DevelopmentConfigScheme
      - UITestScheme # This scheme has UI tests
    templateAttributes:
      appTargetName: Holder
      uiTestTargetName: HolderUISmoketests
      configEnvironment: Development
    run:
      language: nl

  Holder Acceptance:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: FirebaseAcceptance
  
  Holder Test:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: FirebaseTest

  Holder Production:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: FirebaseProduction

  Holder AppStore:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: AppStore

  Verifier Dev:
    templates:
      - DevelopmentConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: Development
    run:
      language: nl

  Verifier Acceptance:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: FirebaseAcceptance

  Verifier Test:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: FirebaseTest

  Verifier Production:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: FirebaseProduction

  Verifier AppStore:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: AppStore
