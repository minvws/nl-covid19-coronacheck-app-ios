# Defines the Xcode Project, which can be generated by running `make generate_project`
# Specification: https://github.com/yonaskolb/XcodeGen/blob/master/Docs/ProjectSpec.md

name: CTR

# - Packages:

packages:
  AppAuth:
    ## When this PR is merged, switch back to official repo. 
    ## For now, use the pinned (and reviewed) commit below 👇🏻
    ## https://github.com/openid/AppAuth-iOS/pull/604/commits/f8487f6e147f41629f6c0a979fd1bc23d47d5bd0
    # github: openid/AppAuth-iOS.git
    # majorVersion: 1.4.0
    github: davbeck/AppAuth-iOS
    revision: f8487f6e147f41629f6c0a979fd1bc23d47d5bd0
  CocoaLumberjack:
    github: CocoaLumberjack/CocoaLumberjack
    majorVersion: 3.7.2
  IOSSecuritySuite:
    github: securing/IOSSecuritySuite
    majorVersion: 1.9.1
  Lottie:
    github: airbnb/lottie-ios
    majorVersion: 3.2.3
  MBProgressHUD:
    github: jdg/MBProgressHUD
    majorVersion: 1.2.0
  Nimble:
    github: Quick/Nimble
    majorVersion: 9.2.0
  Reachability: # Once we support >= iOS12.0 we can remove this & use iOS NWPathMonitor instead.
    github: ashleymills/Reachability.swift
    majorVersion: 5.1.0
  RSwiftLibrary:
    github: mac-cain13/R.swift.Library
    majorVersion: 5.4.0
  SnapshotTesting:
    github: pointfreeco/swift-snapshot-testing
    majorVersion: 1.9.0


# - Attributes: 

attributes:
  LastUpgradeCheck: "1250"

# - Configurations:

configs:
  Development: debug
  FirebaseAcceptance: debug
  FirebaseProduction: release # should be identical to AppStore build.
  AppStore: release

fileGroups:
  - project.yml
  - Localizations
  - .github

# - Project Level settings:

options:
  developmentLanguage: nl

settings:
  base:
    IPHONEOS_DEPLOYMENT_TARGET: 11.0
    SWIFT_VERSION: 5.0
    VERSIONING_SYSTEM: apple-generic
    CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: YES
    FRAMEWORK_SEARCH_PATHS:
      - "$(inherited)"
      - "$(PROJECT_DIR)"
    LD_RUNPATH_SEARCH_PATHS:
      - "$(inherited)"
      - "@executable_path/Frameworks"

# - Target Templates (i.e. shared default settings for targets):

targetTemplates:
  Standard_iOS:
    platform: iOS
    type: application
    dependencies:
      # SPM:
      - package: AppAuth
        product: AppAuth
      - package: AppAuth
        product: AppAuthCore
      - package: AppAuth
        product: AppAuthEnterpriseUserAgent
      - package: CocoaLumberjack
        product: CocoaLumberjack
      - package: CocoaLumberjack
        product: CocoaLumberjackSwift
      - package: IOSSecuritySuite
      - package: Lottie
      - package: MBProgressHUD
      - package: Reachability
        product: Reachability
      - package: RSwiftLibrary
        product: Rswift
      # Frameworks:
      - framework: clcore.framework
        embed: false
      - framework: openssl.framework
        embed: false
    settings:
      base:
        CURRENT_PROJECT_VERSION: 1 # needs to be present for project to build locally, but is overwritten by fastlane. No need to change.
        ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME: AccentColor
        SWIFT_OBJC_BRIDGING_HEADER: Sources/CTR/Infrastructure/Services/Crypto/Utility/CTR-Bridging-Header.h
        TARGETED_DEVICE_FAMILY: 1
        PRODUCT_NAME: $(TARGET_NAME)
        VALIDATE_PRODUCT: YES
        DEBUG_INFORMATION_FORMAT: dwarf-with-dsym # Firebase warns that this must be set for all targets.
        CODE_SIGN_STYLE: Manual
        CODE_SIGN_IDENTITY: iPhone Distribution
        DEVELOPMENT_TEAM: C2H38GV99H
      configs:
        Development:
          PRODUCT_MODULE_NAME: CTR
          NETWORK_CONFIGURATION: ACC # bananahalen no longer works.
          CODE_SIGN_IDENTITY: iPhone Developer
          VALIDATE_PRODUCT: NO
          LOG_LEVEL: debug
        FirebaseAcceptance:
          NETWORK_CONFIGURATION: ACC
          LOG_LEVEL: error
        FirebaseProduction:
          NETWORK_CONFIGURATION: Production
          LOG_LEVEL: error
        AppStore:
          NETWORK_CONFIGURATION: Production
          LOG_LEVEL: error
    info:
      properties:
        # Dynamic properties (APP_FLAVOR etc) here are set at build time, so can still vary based on a Configuration.
        NETWORK_CONFIGURATION: $(NETWORK_CONFIGURATION)
        APP_FLAVOR: ${APP_FLAVOR}
        LOG_LEVEL: ${LOG_LEVEL}
        CFBundleDevelopmentRegion: nl_NL
        CFBundleExecutable: $(EXECUTABLE_NAME)
        CFBundleName: ${DISPLAY_NAME}
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: $(MARKETING_VERSION)
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        ITSAppUsesNonExemptEncryption: false
        LSApplicationQueriesSchemes:
          - 'tel'
          - 'activator'
          - 'cydia'
          - 'filza'
          - 'sileo'
          - 'undecimus'
          - 'zbra'
          - 'https'
          - 'googlechromes'
          - 'opera-https'
          - 'firefox'
          - 'microsoft-edge-https'
        LSRequiresIPhoneOS: true
        NSCameraUsageDescription: "De app will toegang tot de camera om de QR-code te scannen."
        UIAppFonts:
          - 'Montserrat-Bold.ttf'
          - 'Montserrat-SemiBold.ttf'
        UIApplicationSceneManifest:
          UIApplicationSupportsMultipleScenes: false
          UISceneConfigurations:
            UIWindowSceneSessionRoleApplication:
              - UISceneConfigurationName: Default Configuration
                UISceneDelegateClassName: $(PRODUCT_MODULE_NAME).SceneDelegate
        UIApplicationSupportsIndirectInputEvents: true
        UIRequiredDeviceCapabilities:
          - armv7
        UIStatusBarStyle: UIStatusBarStyleDarkContent
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
          - UIInterfaceOrientationPortraitUpsideDown
        UISupportedInterfaceOrientations~ipad:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationPortraitUpsideDown
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
        UIUserInterfaceStyle: Light
        UIViewControllerBasedStatusBarAppearance: true
    preBuildScripts:
      - name: Merge Localizations
        basedOnDependencyAnalysis: true
        script: |
          Scripts/merge_localizations.sh
      - name: Validate HTML in Localization files
        basedOnDependencyAnalysis: true
        script: |
          TEMP_DIR=`mktemp -d`

          #Compile script:
          xcrun --sdk macosx swiftc Scripts/check_localization_html_tags.swift -o $TEMP_DIR/check_localization_html_tags

          #Run script:
          $TEMP_DIR/check_localization_html_tags Sources/CTR/Infrastructure/Resources/Localization/en.lproj/Localizable.strings && $TEMP_DIR/check_localization_html_tags Sources/CTR/Infrastructure/Resources/Localization/nl.lproj/Localizable.strings
      - name: Run R.Swift
        basedOnDependencyAnalysis: true
        script: |
          OUTPUT=`rswift generate "$SRCROOT/Sources/CTR/Infrastructure/Resources/R.generated.swift" --generators string,image,color`

          # forbid TestFlight release if there are missing translations:
          if [[ "$OUTPUT" == *"warning"* ]] && [[ "$TESTFLIGHT_DEPLOY" == "true" ]]; then
            echo "error: Testflight deploys cannot contain missing translations:"
            echo $OUTPUT
            exit 1
          else 
            echo $OUTPUT
          fi
        inputFiles:
          - $TEMP_DIR/rswift-lastrun
        outputFiles:
          - $SRCROOT/Sources/CTR/Infrastructure/Resources/R.generated.swift
      - name: Run SwiftLint
        basedOnDependencyAnalysis: true
        script: |
          if which swiftlint >/dev/null; then
            swiftlint --quiet --config=./.swiftlint.yml
          else
            echo "warning: SwiftLint not found, run 'make dev' in the project root folder"
          fi

  Standard_UnitTesting:
    platform: iOS
    type: bundle.unit-test
    dependencies:
      - package: Nimble
      - package: SnapshotTesting
      - target: Holder
      - framework: Vendor/ViewControllerPresentationSpy.framework
        embed: true
    settings:
      TEST_HOST: "$(BUILT_PRODUCTS_DIR)/CTR.app/CTR"

# - Targets

targets:
  Holder:
    templates:
      - Standard_iOS
    sources:
      - path: Sources
        excludes:
          - "CTR/Interface/Verifier/Launch"
          - "CTR/Infrastructure/Resources/Localization/Verifier/*.lproj"
          - "CTR/Configuration/verifier-Info.plist"
      - path: Sources/CTR/Infrastructure/Resources/R.generated.swift
        optional: true
    settings:
      base:
        APP_FLAVOR: holder
        MARKETING_VERSION: 2.3.0
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIconHolder
        INFOPLIST_FILE: Sources/CTR/Configuration/holder-Info.plist

      configs:
        Development:
          DISPLAY_NAME: "🤖 Dev Holder"
          PRODUCT_NAME: CTR
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.dev
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Dev
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Dev.entitlements
        FirebaseAcceptance:
          DISPLAY_NAME: "💡 Acc Holder"
          PRODUCT_NAME: CTR ACC
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.acc
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Acc
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Acc.entitlements
        FirebaseProduction:
          DISPLAY_NAME: "Prod Holder"
          PRODUCT_NAME: CTR PROD
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder Prod
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Prod.entitlements
        AppStore:
          DISPLAY_NAME: CoronaCheck
          PRODUCT_NAME: CTR
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Holder AppStore
          CODE_SIGN_ENTITLEMENTS: Sources/CTR/Configuration/Holder-Prod.entitlements
    info:
      path: Sources/CTR/Configuration/holder-Info.plist
      properties:
        CFBundleURLTypes:
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr
              CFBundleURLSchemes:
                - coronacheck
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.dev
              CFBundleURLSchemes:
                - coronacheck-dev
            - CFBundleTypeRole: Editor
              CFBundleURLName: nl.rijksoverheid.ctr.acc
              CFBundleURLSchemes:
                - coronacheck-acc
        UILaunchStoryboardName: LaunchScreenHolder

  Verifier:
    templates:
      - Standard_iOS
    sources:
      - path: Sources
        excludes:
          - "CTR/Interface/Holder/Launch"
          - "CTR/Infrastructure/Resources/Localization/Holder/*.lproj"
          - "CTR/Configuration/holder-Info.plist"
      - path: Sources/CTR/Infrastructure/Resources/R.generated.swift
        optional: true
    settings:
      base:
        APP_FLAVOR: verifier
        MARKETING_VERSION: 2.1.2
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIconVerifier
        INFOPLIST_FILE: Sources/CTR/Configuration/verifier-Info.plist
      configs:
        Development:
          DISPLAY_NAME: "🤖 Dev Scanner"
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier.dev
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Dev
        FirebaseAcceptance:
          DISPLAY_NAME: "💡 Acc Scanner"
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Acc
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier.acc
        FirebaseProduction:
          DISPLAY_NAME: "Prod Scanner"
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier Prod
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier
        AppStore:
          DISPLAY_NAME: Scanner
          PROVISIONING_PROFILE_SPECIFIER: CoronaCheck Verifier AppStore
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.ctr.verifier
    info:
      path: Sources/CTR/Configuration/verifier-Info.plist
      properties:
        UILaunchStoryboardName: LaunchScreenVerifier

  CTRTests:
    templates:
      - Standard_UnitTesting
    sources:
      - path: CTRTests
        excludes:
          - "**/__Snapshots__"

# - Scheme Templates

schemeTemplates:

  # Template for Development/Acc/Production/AppStore varieties
  ConfigScheme:
    build:
      config: ${configEnvironment} #not sure if needed.
      targets:
        ${appTargetName}: all
    test:
      config: ${configEnvironment}
    run:
      config: ${configEnvironment}
    profile:
      config: ${configEnvironment}
    analyze:
      config: ${configEnvironment}
    archive:
      config: ${configEnvironment}

  # Variant of the standard `ConfigScheme` for Development
  DevelopmentConfigScheme:
    templates:
      - ConfigScheme
    run:
      commandLineArguments:
        # Enable CoreData debug flags:
        # See: https://www.donnywals.com/using-launch-arguments-for-easier-core-data-debugging/
       # "-com.apple.CoreData.SQLDebug 2": YES # choose a level from 1-4
        "-com.apple.CoreData.ConcurrencyDebug 1": YES # crash with stacktrace on concurrency mistakes

  # Template for adding unit tests to a scheme:
  TestScheme:
    test:
      commandLineArguments:
        "--unittesting": true
      language: nl
      region: NL
      gatherCoverageData: true
      coverageTargets:
        - ${appTargetName}
      targets:
        - name: ${testTargetName}
          parallelizable: false
          randomExecutionOrder: false

# - Schemes

schemes:
  Holder Dev:
    templates:
      - DevelopmentConfigScheme
      - TestScheme # This scheme has unit tests too
    templateAttributes:
      appTargetName: Holder
      testTargetName: CTRTests
      configEnvironment: Development
    run:
      language: nl

  Holder Acceptance:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: FirebaseAcceptance

  Holder Production:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: FirebaseProduction

  Holder AppStore:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Holder
      configEnvironment: AppStore

  Verifier Dev:
    templates:
      - DevelopmentConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: Development
    run:
      language: nl

  Verifier Acceptance:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: FirebaseAcceptance

  Verifier Production:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: FirebaseProduction

  Verifier AppStore:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: AppStore
