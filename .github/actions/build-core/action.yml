name: 'Build mobile core'
description: 'Builds the mobile core library'
runs:
  using: "composite"
  steps:
    - name: Checkout Mobile Core
      shell: bash
      run: |
        git clone https://github.com/minvws/nl-covid19-coronacheck-mobile-core.git tmp-clcore
        cd tmp-clcore
        git checkout v0.4.5
        cd ..

    - name: Get mobile core version
      id: version
      working-directory: tmp-clcore
      shell: bash
      run: |
        echo VERSION=`git rev-parse HEAD` >> $GITHUB_OUTPUT
        echo GO_VERSION="`cat go.mod | grep "go 1." | sed 's/ //g'`" >> $GITHUB_OUTPUT

    - name: Restore mobile core from cache
      id: corecache
      uses: actions/cache@v3
      with:
        path: |
          Frameworks/clcore.xcframework
        key: clcore-xcframework-${{ steps.version.outputs.VERSION }}-${{ steps.version.outputs.GO_VERSION }}-v2

    - name: Setup go
      if: steps.corecache.outputs.cache-hit != 'true'
      uses: actions/setup-go@v3.4.0
      with:
        go-version-file: 'tmp-clcore/go.mod'
      
    - name: Compile Go library dependency
      if: steps.corecache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: tmp-clcore
      run: |
        git submodule init
        git submodule update
        go mod download golang.org/x/mobile
        go install golang.org/x/mobile/cmd/gomobile@latest
        gomobile init
        gomobile bind -target ios,iossimulator -o clcore.xcframework -iosversion 11.0 github.com/minvws/nl-covid19-coronacheck-mobile-core
        cd ../
        rm -rf Frameworks/clcore.xcframework
        rm -rf clcore.framework # cleanup old location
        mkdir -p Frameworks
        cp -R tmp-clcore/clcore.xcframework Frameworks/
        rm -rf tmp-clcore

    - name: Archive mobile core dependency
      uses: actions/upload-artifact@v3
      with:
        name: clcore.xcframework
        path: |
          Frameworks/clcore.xcframework
        retention-days: 2