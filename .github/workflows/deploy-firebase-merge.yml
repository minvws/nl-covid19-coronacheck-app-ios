# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: "Deploy: Firebase (auto)"

on:
  push:
    branches:
      - main
      - 'release/*'

jobs:
  firebase-deploy-holder-acc:
    if: github.event.repository.name == 'nl-covid19-coronacheck-app-ios-private' && (contains(github.event.ref, 'release/holder-') || contains(github.event.ref, 'refs/heads/main'))
    uses: ./.github/workflows/template_firebase-deploy.yml
    with:
      fastlane_command: bundle exec fastlane ios deploy_holder_acc_ci
      app_title: Acc Holder App
      app_filename: CTR ACC
    secrets:
      DIST_CERT_CONTENTS: ${{ secrets.DIST_CERT_CONTENTS }}
      DIST_CERT_PASSWORD: ${{ secrets.DIST_CERT_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      SLACK_URL: ${{ secrets.SLACK_URL }}    
      
  firebase-deploy-holder-test:
    if: github.event.repository.name == 'nl-covid19-coronacheck-app-ios-private' && (contains(github.event.ref, 'release/holder-') || contains(github.event.ref, 'refs/heads/main'))
    uses: ./.github/workflows/template_firebase-deploy.yml
    with:
      fastlane_command: bundle exec fastlane ios deploy_holder_test_ci
      app_title: Test Holder App
      app_filename: CTR Test
    secrets:
      DIST_CERT_CONTENTS: ${{ secrets.DIST_CERT_CONTENTS }}
      DIST_CERT_PASSWORD: ${{ secrets.DIST_CERT_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      SLACK_URL: ${{ secrets.SLACK_URL }}      
    
  # firebase-deploy-verifier-acc:
  #   if: github.event.repository.name == 'nl-covid19-coronacheck-app-ios-private' && (contains(github.event.ref, 'release/verifier-') || contains(github.event.ref, 'refs/heads/main'))
  #   uses: ./.github/workflows/template_firebase-deploy.yml
  #   with:
  #     fastlane_command: bundle exec fastlane ios deploy_verifier_acc_ci
  #     app_title: Acc Verifier App
  #     app_filename: Verifier
  #   secrets:
  #     DIST_CERT_CONTENTS: ${{ secrets.DIST_CERT_CONTENTS }}
  #     DIST_CERT_PASSWORD: ${{ secrets.DIST_CERT_PASSWORD }}
  #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #     SLACK_URL: ${{ secrets.SLACK_URL }}

  # firebase-deploy-verifier-test:
  #   if: github.event.repository.name == 'nl-covid19-coronacheck-app-ios-private' && (contains(github.event.ref, 'release/verifier-') || contains(github.event.ref, 'refs/heads/main'))
  #   uses: ./.github/workflows/template_firebase-deploy.yml
  #   with:
  #     fastlane_command: bundle exec fastlane ios deploy_verifier_test_ci
  #     app_title: Test Verifier App
  #     app_filename: Verifier
  #   secrets:
  #     DIST_CERT_CONTENTS: ${{ secrets.DIST_CERT_CONTENTS }}
  #     DIST_CERT_PASSWORD: ${{ secrets.DIST_CERT_PASSWORD }}
  #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #     SLACK_URL: ${{ secrets.SLACK_URL }}

  firebase-deploy-holder-prod:
    if: github.event.repository.name == 'nl-covid19-coronacheck-app-ios-private' && (contains(github.event.ref, 'release/holder-') || contains(github.event.ref, 'refs/heads/main'))
    uses: ./.github/workflows/template_firebase-deploy.yml
    with:
      fastlane_command: bundle exec fastlane ios deploy_holder_prod_ci
      app_title: Prod Holder App
      app_filename: CTR PROD
    secrets:
      DIST_CERT_CONTENTS: ${{ secrets.DIST_CERT_CONTENTS }}
      DIST_CERT_PASSWORD: ${{ secrets.DIST_CERT_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      SLACK_URL: ${{ secrets.SLACK_URL }}
        
  # firebase-deploy-verifier-prod:
  #   if: github.event.repository.name == 'nl-covid19-coronacheck-app-ios-private' && (contains(github.event.ref, 'release/verifier-') || contains(github.event.ref, 'refs/heads/main'))
  #   uses: ./.github/workflows/template_firebase-deploy.yml
  #   with:
  #     fastlane_command: bundle exec fastlane ios deploy_verifier_prod_ci
  #     app_title: Prod Verifier App
  #     app_filename: Verifier
  #   secrets:
  #     DIST_CERT_CONTENTS: ${{ secrets.DIST_CERT_CONTENTS }}
  #     DIST_CERT_PASSWORD: ${{ secrets.DIST_CERT_PASSWORD }}
  #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #     SLACK_URL: ${{ secrets.SLACK_URL }}