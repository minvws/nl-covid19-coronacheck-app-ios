# Syntax: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: test

on:
  pull_request:
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode_14.0.1.app/Contents/Developer
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 180
  FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 10
  
jobs:
  swiftlint:
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          
      - name: Run SwiftLint 
        run: |
          make run_swiftlint

  test:
    runs-on: macos-12
    timeout-minutes: 30
    needs: swiftlint # only run tests (which is resource intensive) after swiftlint passes
    steps:
      - name: Prestart the simulator # https://circleci.com/docs/2.0/testing-ios/#pre-starting-the-simulator
        # 🧐 when changing below, don't forget to also change the device name in the Fastfile too: 
        run: | 
          xcrun simctl boot "iPhone 14" || true
      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: Setup CI environment
        run: |
          make ci

      - name: Checkout LFS resources
        run: |
          git lfs pull
          git checkout .
      
      - name: Checkout Mobile Core
        run: |
          git clone https://github.com/minvws/nl-covid19-coronacheck-mobile-core.git tmp-clcore
          cd tmp-clcore
          git checkout v0.4.5
          cd ..

      - name: Get mobile core version
        id: version
        run: |
          echo VERSION=`git rev-parse HEAD` >> $GITHUB_OUTPUT
          echo GO_VERSION="`cat go.mod | grep "go 1." | sed 's/ //g'`" >> $GITHUB_OUTPUT
        working-directory: tmp-clcore
        shell: bash

      - name: Restore mobile core from cache
        id: corecache
        uses: actions/cache@v3
        with:
          path: |
            clcore.xcframework
          key: clcore-xcframework-${{ steps.version.outputs.VERSION }}-${{ steps.version.outputs.GO_VERSION }}

      - name: Setup go
        if: steps.corecache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v3.4.0
        with:
          go-version-file: 'tmp-clcore/go.mod'
        
      - name: Compile Go library dependency
        if: steps.corecache.outputs.cache-hit != 'true'
        working-directory: tmp-clcore
        run: |
          git submodule init
          git submodule update
          go mod download golang.org/x/mobile
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile bind -target ios,iossimulator -o clcore.xcframework -iosversion 11.0 github.com/minvws/nl-covid19-coronacheck-mobile-core
          cd ../
          rm -rf clcore.xcframework
          cp -R tmp-clcore/clcore.xcframework .
          rm -rf tmp-clcore
          
      - name: Build and test
        env:
          SLACK_URL: ${{ secrets.SLACK_URL }}
        run: |
          bundle exec fastlane ios test_ci
